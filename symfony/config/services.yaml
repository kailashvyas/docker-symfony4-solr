# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    url_definitions:
        search_definition: 'http://symfony_solr:8983/solr/tmdb/select?facet=on&facet.field=attr_genres&facet.field=spoken_languages_name_ss&facet.field=cast_name_ss&facet.query=budget_i:[0+TO+100]&facet.query=budget_i:[101+TO+10000000]&facet.query=budget_i:[10000001+TO+100000000]&facet.query=budget_i:[100000001+TO+*]&indent=on&q={q}&wt=json&start={start}&rows={rows}&facet.mincount=1'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\ApiService:
        arguments:
            $urlDefinitions: "%url_definitions%"